(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{286:function(t,a,s){"use strict";s.r(a);var n=s(38),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"同源和跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同源和跨域","aria-hidden":"true"}},[t._v("#")]),t._v(" 同源和跨域")]),t._v(" "),s("h2",{attrs:{id:"同源策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同源策略","aria-hidden":"true"}},[t._v("#")]),t._v(" 同源策略")]),t._v(" "),s("h4",{attrs:{id:"什么是同源策略？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是同源策略？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是同源策略？")]),t._v(" "),s("p",[t._v("同源策略（same-origin policy）是Netscape提出的一个著名的安全策略，用于限定JavaScript代码能够操作哪些WEB内容。具体来说，它规定了脚本只能读取与所属文档来源相同的文档的属性。"),s("br"),t._v("\n什么是来源相同？文档的来源包含协议、主机、以及载入文档的URL端口。只有协议、主机和端口都完全相同，才属于同源，否则不是同源文档。")]),t._v(" "),s("h4",{attrs:{id:"同源策略具体有哪些限制？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同源策略具体有哪些限制？","aria-hidden":"true"}},[t._v("#")]),t._v(" 同源策略具体有哪些限制？")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("存储在浏览器中的数据以源划分，脚本无法读写不同源脚本在浏览器中存储的数据。如localStorage，sessionStorage和IndexedDB。")])]),t._v(" "),s("li",[s("p",[t._v("cookie的访问也存在限制，但使用不用的源定义。cookie可以使用Domain，Path，Secure，和Http-Only标记来限定其访问性。使用Domain可以为本域和任何父域（非公共后缀如.com等）设置cookie。不管使用哪个协议（HTTP/HTTPS）或端口号，浏览器都允许给定的域以及其任何子域名(sub-domains) 访问cookie。关于cookies的详细解析，请点击 "),s("router-link",{attrs:{to:"/js/cookie.html"}},[t._v("cookie")]),t._v("。")],1)]),t._v(" "),s("li",[s("p",[t._v("XMLHttpRequest生成的HTTP请求，这个对象允许客户端javascript生成任意的HTTP请求到任意服务器，但是不允许脚本读取非文档所属服务器返回的资源，规则为第4条中的读操作。这就是我们常说的跨域请求，其实所谓的跨域就是受到了同源策略的约束。")])]),t._v(" "),s("li",[s("p",[t._v("跨源资源的访问")])])]),t._v(" "),s("ul",[s("li",[t._v("通常允许跨源资源嵌入，如使用img script的src属性嵌入非同源资源，但嵌入的script报错信息无法捕捉。")]),t._v(" "),s("li",[t._v("通常允许跨源写操作，如表单提交。")]),t._v(" "),s("li",[t._v("通常不允许跨源读操作，如ajax请求返回的资源，获取跨源DOM内容。")]),t._v(" "),s("li",[t._v("通常限制跨源脚本API访问。iframe.contentWindow, window.parent, window.open 和 window.opener 允许文档间直接相互引用。当两个文档的源不同时，这些引用方式将对 Window 和 Location对象的访问添加限制。")])]),t._v(" "),s("h4",{attrs:{id:"如何打破跨源资源访问限制？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何打破跨源资源访问限制？","aria-hidden":"true"}},[t._v("#")]),t._v(" 如何打破跨源资源访问限制？")]),t._v(" "),s("p",[t._v("这个可以拆分成三个问题：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("同源不限制跨源写操作，如何防止自己的服务器数据被恶意篡改？"),s("br"),t._v("\n答案是为写操作增加身份校验，通常使用cookie方式，在服务端验证身份拦截异常请求。但仅使用cookie验证存在CSRF安全漏洞，详细解析及解决办法，请点击 "),s("router-link",{attrs:{to:"/js/XSS和XCSRF.html"}},[t._v("XSS和CSRF")])],1)]),t._v(" "),s("li",[s("p",[t._v("同源限制跨源读操作，如何能得到跨源得到需要的属性，以及跨源请求返回的数据？"),s("br"),t._v("\n这个就涉及到常见的跨域问题了")])])]),t._v(" "),s("h2",{attrs:{id:"跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域","aria-hidden":"true"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),s("h4",{attrs:{id:"什么是跨域？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是跨域？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是跨域？")]),t._v(" "),s("p",[t._v("在上面我们已经知道，由于同源策略的限制，我们无法操作非同源文档的web内容，无法得到跨域请求返回的内容。跨域就是要道高一尺，魔高一丈，在同源策略的严格限制下，找到操作非同源文档web内容，得到跨域请求返回内容的办法。")]),t._v(" "),s("h4",{attrs:{id:"为什么有跨域的需求？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么有跨域的需求？","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么有跨域的需求？")]),t._v(" "),s("p",[t._v("同源的规则非常严格，需要主机、协议和端口都完全相同。而在日常开发中，需要突破这一限制的场景很多。"),s("br"),t._v("\n场景1--跨域请求: 比如后端人员提供的某接口部署在http://www.cc.com下，供www.cc.com使用。而某天我开发的www.dd.com也需要用到这个接口，这就需要跨域解决了。"),s("br"),t._v("\n场景2--跨源脚本交互通信: 如在页面中嵌入iframe或用window.open打开相同父域名的页面，并且想要用js操作其中的dom，同样涉及到跨域。")]),t._v(" "),s("h4",{attrs:{id:"如何实现跨域？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何实现跨域？","aria-hidden":"true"}},[t._v("#")]),t._v(" 如何实现跨域？")]),t._v(" "),s("p",[t._v("跨域实现通常有以下方式：")]),t._v(" "),s("ol",[s("li",[t._v("跨域请求实现：")])]),t._v(" "),s("ul",[s("li",[t._v("jsonp")]),t._v(" "),s("li",[t._v("CORS")]),t._v(" "),s("li",[t._v("nodejs中间件")]),t._v(" "),s("li",[t._v("nginx代理")]),t._v(" "),s("li",[t._v("WebSocket协议")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("web页面交互通信")])]),t._v(" "),s("ul",[s("li",[t._v("postMessage")]),t._v(" "),s("li",[t._v("document.domain")]),t._v(" "),s("li",[t._v("location.hash")]),t._v(" "),s("li",[t._v("window.name")])]),t._v(" "),s("h4",{attrs:{id:"jsonp（json-with-padding）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsonp（json-with-padding）","aria-hidden":"true"}},[t._v("#")]),t._v(" jsonp（JSON with padding）")]),t._v(" "),s("p",[t._v("使用前提：get请求。前后端约定。"),s("br"),t._v("\njsonp利用跨源资源嵌入不受限的特点，利用script标签，将src设为需要请求的接口地址。该方式跨域需要满足如下条件：")]),t._v(" "),s("ol",[s("li",[t._v("该接口请求类型必须是get，因为script标签加载资源只能用get方式;")]),t._v(" "),s("li",[t._v("该接口必须有一个callback参数，参数对应值需要与前端约定。 如http://www.dd.com/get/jsonp?callback=onback;")]),t._v(" "),s("li",[t._v("该接口的返回值是该参数对应值的调用，传人前端需要得到的真实返回值。如 onback({status: 200, data: 'yes we do it'})；")]),t._v(" "),s("li",[t._v("前端页面脚本中需要有onback的函数定义。当该script标签'资源'被加载成功时，onback函数被调用，得到真实返回值继续操作。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" script "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/javascript'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传参并指定回调执行函数为onBack")]),t._v("\n    script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.dd.com/get/jsonp?callback=onback'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回调执行函数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onBack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"跨域资源共享（cors）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域资源共享（cors）","aria-hidden":"true"}},[t._v("#")]),t._v(" 跨域资源共享（CORS）")]),t._v(" "),s("p",[t._v("使用前提：前后端均支持CORS。\n跨域资源共享(CORS) 是一种机制，它使用额外的 HTTP 头来告诉浏览器，允许某源上的Web应用访问不同源服务器上指定的资源。该机制允许所有类型的请求，但get以外对服务器数据可能产生副作用的请求，浏览器会首先发送options预检请求，以确定是否允许该跨域请求，以及是否需要携带某些如cookie的身份信息。\n如不需要携带cookie信息，前端无需设置，直接请求。如需要携带信息，前端需要加with-withCredentials，该cookie为请求接口所在域的cookie，后端设置Access-Control-Allow-Origin。"),s("br"),t._v("\n更改加CORS规则可以参考"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP访问控制（CORS）"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"nodejs中间件代理跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs中间件代理跨域","aria-hidden":"true"}},[t._v("#")]),t._v(" Nodejs中间件代理跨域")]),t._v(" "),s("p",[t._v("使用前提：无。\n启用代理服务器转发数据，且可以通过设置cookieDomainRewrite参数修改响应头中cookie中域名，实现当前域的cookie写入。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求部分")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前端开关：浏览器是否读写cookie")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("withCredentials "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问http-proxy-middleware代理服务器")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.demo1.com:3000/login?user=admin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  中间件部分")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" express "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http-proxy-middleware'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" app "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代理跨域目标接口")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.demo2.com:8080'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    changeOrigin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改响应头信息，实现跨域并允许带cookie")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onProxyRes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("proxyRes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Origin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.domain1.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Credentials'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改响应信息中的cookie域名")]),t._v("\n    cookieDomainRewrite"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'www.demo1.com'")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以为false，表示不修改")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"nginx代理同nodejs中间件代理原理类似，需要后端配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx代理同nodejs中间件代理原理类似，需要后端配置","aria-hidden":"true"}},[t._v("#")]),t._v(" nginx代理同Nodejs中间件代理原理类似，需要后端配置")]),t._v(" "),s("h4",{attrs:{id:"websocket协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#websocket协议","aria-hidden":"true"}},[t._v("#")]),t._v(" WebSocket协议")]),t._v(" "),s("p",[t._v("使用前提：浏览器支持WebSocket协议。"),s("br"),t._v("\nWebSocket 是一种基于 ws(非加密) / wss(加密) 协议的技术，使用这种技术可以建立客户端和服务器端双向且持续的通信连接，并且不受同源策略限制。"),s("br"),t._v("\n关于WebSocket的详解可以参考："),s("a",{attrs:{href:"https://www.runoob.com/html/html5-websocket.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML5 WebSocket"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"postmessage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postmessage","aria-hidden":"true"}},[t._v("#")]),t._v(" postMessage")]),t._v(" "),s("p",[t._v("使用前提：浏览器支持postMessage方法。"),s("br"),t._v("\nwindow.postMessage() 是HTML5新增的，可以安全地实现跨源通信的方法。"),s("br"),t._v("\npostMessage(data,origin)方法接受两个参数：\ndata： html5规范支持任意基本类型或可复制的对象，但部分浏览器只支持字符串，所以传参时最好用JSON.stringify()序列化。"),s("br"),t._v('\norigin： 协议+主机+端口号，也可以设置为"*"，表示可以传递给任意窗口，如果要指定和当前窗口同源的话设置为"/"。'),s("br"),t._v("\n关于postMessage的详细解析参考："),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage",target:"_blank",rel:"noopener noreferrer"}},[t._v("window.postMessage"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"document-domain-更改源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#document-domain-更改源","aria-hidden":"true"}},[t._v("#")]),t._v(" document.domain 更改源")]),t._v(" "),s("p",[t._v("使用前提：只适用于文档间有相同父域的情况。"),s("br"),t._v("\n父级域名相同的文档，使用document.domain设置相同的基础主域(端口会被设为null)，便实现了域名和端口的相同。当两个文档也使用相同的协议时，相当于同源文档，不受同源策略的限制。"),s("br"),t._v("\n比如将 https://www.sohu.com 和 http://mp.sohu.com 使用document.domain 将主域设置为sohu.com。两个文档便实现了同源，可以相互通信。")]),t._v(" "),s("h4",{attrs:{id:"iframe-location-hash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iframe-location-hash","aria-hidden":"true"}},[t._v("#")]),t._v(" iframe + location.hash")]),t._v(" "),s("p",[t._v("使用前提：无。"),s("br"),t._v("\n当在一个文档A中插入不同源的iframeB时，由于同源策略限制，A无法与B通信。但是可以通过更改B的url的hash，并在B中监听hash变化的方式，实现父文档对子文档的单方面通信。"),s("br"),t._v("\n也可以通过url中的查询字符串方式传递给B信息，但这只适用于单次load时通信，B无法监听该变化。"),s("br"),t._v("\n如果要实现子对父的通信，则需要再加一个与A同源的文档C，让B中嵌入iframeC，同样通过hashchange的方式，实现B对C的单方面通信。而C在监听到change时，使用脚本与A通信，便实现了A和B的双向通信。"),s("br"),t._v("\n我看到这个方案时，感觉略鸡肋。既然要准备与A同源的C，又需要B文档嵌入C，并加入监听hash变化的函数，何不省去B将业务写入C，直接让A嵌入同源C并实现相互通信呢？\n当然，这只是一种解决问题的方式和思路，在不得不使用这种方案的环境和条件下，是比束手无策要好的选择。")]),t._v(" "),s("h4",{attrs:{id:"window-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-name","aria-hidden":"true"}},[t._v("#")]),t._v(" window.name")]),t._v(" "),s("p",[t._v("使用前提：无。"),s("br"),t._v('\nwindow.name是针对于浏览器窗口的属性。当一个窗口打开后，在这个窗口中存在以及之后存在的文档均可以访问和修改这个属性。如我在a文档中设置window.name="aa";然后location.herf="www.bb.com"。bb访问window.name仍然是\'aa\'。这就实现了跨源文档的通信。')]),t._v(" "),s("h4",{attrs:{id:"参考文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文档","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000013974607",target:"_blank",rel:"noopener noreferrer"}},[t._v("《同源策略》的简单介绍"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器的同源策略"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://www.cnblogs.com/EternalZH/p/10395034.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端处理跨域的几种方式"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://segmentfault.com/a/1190000010803881#articleHeader8",target:"_blank",rel:"noopener noreferrer"}},[t._v("同源策略那些事儿"),s("OutboundLink")],1)])])},[],!1,null,null,null);a.default=e.exports}}]);